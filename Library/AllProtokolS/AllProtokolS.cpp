//---------------------------------------------------------------------------
#pragma hdrstop
#include "AllProtokolS.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
//---------------------------------------------------------------------------
AllProtokolS::AllProtokolS()
{
    protokol = new RSProtokol_t();
    comPortPtr = comPortCount;
}
//---------------------------------------------------------------------------
AllProtokolS::~AllProtokolS()
{
    delete protokol;
}
//---------------------------------------------------------------------------
void AllProtokolS::UpdateComPotrs()
{
    AnsiString comPortName;
    comPortPtr = 1;
    protokol->flagModbusProtokol = 0; // 9-ти битный
    while ( comPortPtr <= comPortCount )
    {
        comPortName = "\\\\.\\COM" + IntToStr( comPortPtr );
        int errorCode = protokol->RSConnect( comPortName.c_str() );
        findComPorts[comPortPtr - 1] = false;
        if ( errorCode == 0 )
        {
           protokol->RSDisConnect();
           findComPorts[comPortPtr - 1] = true;
        }
        comPortPtr++;
    }
    comPortPtr = 0;
}
//---------------------------------------------------------------------------
bool AllProtokolS::NextComPortIndex(int * comPortIndex)
{
    while ( comPortPtr < comPortCount )
    {
        if ( findComPorts[comPortPtr] )
        {
            *comPortIndex = comPortPtr + 1;
            comPortPtr++;
            return true;
        }
        comPortPtr++;
    }
    return false;
}
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
